ERROR: a BoundsError was thrown during kernel execution on thread (1, 32, 1) in block (1, 1, 1).
Out-of-bounds array access
Stacktrace not available, run Julia on debug level 2 for more details (by passing -g2 to the executable).

Testing basic operations of GpuMatrixModN...
A = 
3×3 GpuMatrixModN modulo 11:
[1 2 3; 4 5 6; 7 8 9]

B = 
3×3 GpuMatrixModN modulo 11:
[9 8 7; 6 5 4; 3 2 1]

A + B = 
3×3 GpuMatrixModN modulo 11:
[10 10 10; 10 10 10; 10 10 10]

A - B = 
3×3 GpuMatrixModN modulo 11:
[3 5 7; 9 0 2; 4 6 8]

A * B = 
3×3 GpuMatrixModN modulo 11:
[8 2 7; 7 3 10; 6 4 2]

A .* B = 
3×3 GpuMatrixModN modulo 11:
[9 5 10; 2 3 2; 10 5 9]

3 + A = 
3×3 GpuMatrixModN modulo 11:
[4 5 6; 7 8 9; 10 0 1]

A - 3 = 
3×3 GpuMatrixModN modulo 11:
[9 10 0; 1 2 3; 4 5 6]

3 * A = 
3×3 GpuMatrixModN modulo 11:
[3 6 9; 1 4 7; 10 2 5]

-A = 
3×3 GpuMatrixModN modulo 11:
[10 9 8; 7 6 5; 4 3 2]

All basic operations tests passed!
Testing utility functions of GpuMatrixModN...
identity(Int, 3, 11) = 
3×3 GpuMatrixModN modulo 11:
[1 0 0; 0 1 0; 0 0 1]

zeros(Int, 2, 3, 11) = 
2×3 GpuMatrixModN modulo 11:
[0 0 0; 0 0 0]

rand(Int, 2, 2, 11) = 
2×2 GpuMatrixModN modulo 11:
[1 9; 2 6]

All utility functions tests passed!
Testing matrix operations of GpuMatrixModN...
G = 
3×3 GpuMatrixModN modulo 11:
[1 2 3; 0 1 4; 5 6 0]

G^2 = 
3×3 GpuMatrixModN modulo 11:
[5 0 0; 9 3 4; 5 5 6]

G^0 = 
3×3 GpuMatrixModN modulo 11:
[1 0 0; 0 1 0; 0 0 1]

N = 
3×3 GpuMatrixModN modulo 11:
[1 2 3; 2 4 6; 3 6 9]

GPU Matrix Type: Test Failed at /home/ryb/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/basic_operations_test.jl:206
  Expression: !(is_invertible(N))

Stacktrace:
 [1] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:679 [inlined]
 [2] test_matrix_operations()
   @ Main ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/basic_operations_test.jl:206
 [3] test_gpu_mat
   @ ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/basic_operations_test.jl:260 [inlined]
 [4] macro expansion
   @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:19 [inlined]
 [5] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
 [6] macro expansion
   @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:19 [inlined]
 [7] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
 [8] (::var"#3#6")()
   @ Main ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:18
Testing modulus-changing functions of GpuMatrixModN...
A (mod 11) = 
3×3 GpuMatrixModN modulo 11:
[1 2 3; 4 5 6; 7 8 9]

B = change_modulus(A, 7) = 
3×3 GpuMatrixModN modulo 7:
[1 2 3; 4 5 6; 0 1 2]

C after change_modulus(C, 7) = 
3×3 GpuMatrixModN modulo 7:
[1 2 3; 4 5 6; 0 1 2]

All modulus-changing function tests passed!

All GpuMatrixModN tests passed!
Testing in-place operations of GpuMatrixModN...
A = 
3×3 GpuMatrixModN modulo 11:
[1 2 3; 4 5 6; 7 8 9]

B = 
3×3 GpuMatrixModN modulo 11:
[9 8 7; 6 5 4; 3 2 1]

C = A + B (in-place) = 
3×3 GpuMatrixModN modulo 11:
[10 10 10; 10 10 10; 10 10 10]

D = A - B (in-place) = 
3×3 GpuMatrixModN modulo 11:
[3 5 7; 9 0 2; 4 6 8]

C = A .* B (in-place) = 
3×3 GpuMatrixModN modulo 11:
[9 5 10; 2 3 2; 10 5 9]

D = -A (in-place) = 
3×3 GpuMatrixModN modulo 11:
[10 9 8; 7 6 5; 4 3 2]

C = A + 3 (in-place) = 
3×3 GpuMatrixModN modulo 11:
[4 5 6; 7 8 9; 10 0 1]

D = A - 3 (in-place) = 
3×3 GpuMatrixModN modulo 11:
[9 10 0; 1 2 3; 4 5 6]

C = A * 3 (in-place) = 
3×3 GpuMatrixModN modulo 11:
[3 6 9; 1 4 7; 10 2 5]

E = A * B (in-place) = 
3×3 GpuMatrixModN modulo 11:
[8 2 7; 7 3 10; 6 4 2]

All in-place operations tests passed!
Testing PLUQ operations on GpuMatrixModN...
Matrix A = 
3×3 GpuMatrixModN modulo 11:
[1 2 3; 4 5 6; 7 8 9]

Testing rref_gpu_type...
RREF(A) = 
3×3 GpuMatrixModN modulo 11:
[8 0 0; 0 8 0; 0 0 1]

RREF(B) (identity) = 
3×3 GpuMatrixModN modulo 11:
[1 0 0; 0 1 0; 0 0 1]

RREF(C) (rank 1) = 
3×3 GpuMatrixModN modulo 11:
[4 0 0; 0 1 0; 0 0 0]

Testing rref_gpu_type...
RREF_TYPE(A) = 
3×3 GpuMatrixModN modulo 11:
[8 0 0; 0 8 0; 0 0 1]

RREF_TYPE(A) with modulus 7 = 
3×3 GpuMatrixModN modulo 7:
[0 0 0; 0 1 0; 0 0 1]

All RREF operations tests passed!
Testing LU decomposition operations on GpuMatrixModN...
Matrix A = 
3×3 GpuMatrixModN modulo 11:
[1 2 3; 4 5 6; 7 8 9]

Testing lu_gpu_type...
row: 1, col: 1
A.rows: 3, A.cols: 3
[1 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 7 8 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]PLUQ Operations: Error During Test at /home/ryb/GPUFiniteFieldMatrices.jl/test/runtests.jl:28
  Got exception outside of a @test
  KernelException: exception thrown during kernel execution on device NVIDIA GeForce RTX 3060
  Stacktrace:
    [1] check_exceptions()
      @ CUDA ~/.julia/packages/CUDA/TW8fL/src/compiler/exceptions.jl:39
    [2] synchronize(stream::CuStream; blocking::Bool, spin::Bool)
      @ CUDA ~/.julia/packages/CUDA/TW8fL/lib/cudadrv/synchronization.jl:207
    [3] synchronize
      @ ~/.julia/packages/CUDA/TW8fL/lib/cudadrv/synchronization.jl:194 [inlined]
    [4] synchronize
      @ ~/.julia/packages/CUDA/TW8fL/src/memory.jl:527 [inlined]
    [5] synchronize(x::CuArray{Int64, 2, CUDA.DeviceMemory})
      @ CUDA ~/.julia/packages/CUDA/TW8fL/src/array.jl:477
    [6] (::CUDA.var"#1151#1152"{Int64, Matrix{Int64}, Int64, CuArray{Int64, 2, CUDA.DeviceMemory}, Int64, Int64})()
      @ CUDA ~/.julia/packages/CUDA/TW8fL/src/array.jl:597
    [7] #context!#1014
      @ ~/.julia/packages/CUDA/TW8fL/lib/cudadrv/state.jl:168 [inlined]
    [8] context!
      @ ~/.julia/packages/CUDA/TW8fL/lib/cudadrv/state.jl:163 [inlined]
    [9] unsafe_copyto!(dest::Matrix{Int64}, doffs::Int64, src::CuArray{Int64, 2, CUDA.DeviceMemory}, soffs::Int64, n::Int64)
      @ CUDA ~/.julia/packages/CUDA/TW8fL/src/array.jl:592
   [10] copyto!
      @ ~/.julia/packages/CUDA/TW8fL/src/array.jl:544 [inlined]
   [11] copyto!
      @ ~/.julia/packages/CUDA/TW8fL/src/array.jl:548 [inlined]
   [12] copyto_axcheck!
      @ ./abstractarray.jl:1167 [inlined]
   [13] Matrix{Int64}(x::CuArray{Int64, 2, CUDA.DeviceMemory})
      @ Base ./array.jl:626
   [14] show(io::IOStream, X::CuArray{Int64, 2, CUDA.DeviceMemory})
      @ Base ./arrayshow.jl:491
   [15] print(io::IOStream, x::CuArray{Int64, 2, CUDA.DeviceMemory})
      @ Base ./strings/io.jl:35
   [16] print(xs::CuArray{Int64, 2, CUDA.DeviceMemory})
      @ Base ./coreio.jl:3
   [17] lu_gpu_type(A::GpuMatrixModN{Int64}, mod_N::Int64)
      @ GPUFiniteFieldMatrices ~/GPUFiniteFieldMatrices.jl/src/GpuMatrixModN/rref_lu_pluq/rref_gpu_type.jl:103
   [18] lu_gpu_type
      @ ~/GPUFiniteFieldMatrices.jl/src/GpuMatrixModN/rref_lu_pluq/rref_gpu_type.jl:65 [inlined]
   [19] test_lu_operations()
      @ Main ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/pluq_operations_test.jl:89
   [20] test_pluq()
      @ Main ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/pluq_operations_test.jl:187
   [21] macro expansion
      @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:29 [inlined]
   [22] macro expansion
      @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [23] macro expansion
      @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:29 [inlined]
   [24] macro expansion
      @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [25] (::var"#3#6")()
      @ Main ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:18
   [26] (::Base.RedirectStdStream)(thunk::var"#3#6", stream::IOStream)
      @ Base ./stream.jl:1464
   [27] #2
      @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:15 [inlined]
   [28] (::Base.RedirectStdStream)(thunk::var"#2#5"{IOStream}, stream::IOStream)
      @ Base ./stream.jl:1464
   [29] #1
      @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:14 [inlined]
   [30] open(::var"#1#4", ::String, ::Vararg{String}; kwargs::@Kwargs{})
      @ Base ./io.jl:410
   [31] open(::Function, ::String, ::String)
      @ Base ./io.jl:407
   [32] top-level scope
      @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:13
   [33] include(fname::String)
      @ Main ./sysimg.jl:38
   [34] top-level scope
      @ REPL[3]:1
   [35] eval
      @ ./boot.jl:430 [inlined]
   [36] eval_user_input(ast::Any, backend::REPL.REPLBackend, mod::Module)
      @ REPL ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/REPL/src/REPL.jl:245
   [37] repl_backend_loop(backend::REPL.REPLBackend, get_module::Function)
      @ REPL ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/REPL/src/REPL.jl:342
   [38] start_repl_backend(backend::REPL.REPLBackend, consumer::Any; get_module::Function)
      @ REPL ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/REPL/src/REPL.jl:327
   [39] run_repl(repl::REPL.AbstractREPL, consumer::Any; backend_on_current_task::Bool, backend::Any)
      @ REPL ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/REPL/src/REPL.jl:483
   [40] run_repl(repl::REPL.AbstractREPL, consumer::Any)
      @ REPL ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/REPL/src/REPL.jl:469
   [41] (::Base.var"#1150#1152"{Bool, Symbol, Bool})(REPL::Module)
      @ Base ./client.jl:446
   [42] #invokelatest#2
      @ ./essentials.jl:1055 [inlined]
   [43] invokelatest
      @ ./essentials.jl:1052 [inlined]
   [44] run_main_repl(interactive::Bool, quiet::Bool, banner::Symbol, history_file::Bool, color_set::Bool)
      @ Base ./client.jl:430
   [45] repl_main
      @ ./client.jl:567 [inlined]
   [46] _start()
      @ Base ./client.jl:541
Testing matrix multiplication operations on GpuMatrixModN...
Matrix A = 
2×3 GpuMatrixModN modulo 11:
[1 2 3; 4 5 6]

Matrix B = 
3×2 GpuMatrixModN modulo 11:
[7 8; 9 10; 0 1]

Testing standard matrix multiplication...
A * B = 
2×2 GpuMatrixModN modulo 11:
[3 9; 7 0]

Testing mat_mul_gpu_type direct implementation...
mat_mul_gpu_type(A, B) = 
2×2 GpuMatrixModN modulo 11:
[3 9; 7 0]

mat_mul_gpu_type(A, B) with modulus 7 = 
2×2 GpuMatrixModN modulo 7:
[4 3; 3 4]

Matrix Multiplication: Test Failed at /home/ryb/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/matmul_operations_test.jl:64
  Expression: Array(C_mod) ≈ expected_C_mod
   Evaluated: [4 3; 3 4] ≈ [2 1; 6 0]

Stacktrace:
 [1] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:679 [inlined]
 [2] test_matmul_operations()
   @ Main ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/matmul_operations_test.jl:64
 [3] test_matmul
   @ ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/matmul_operations_test.jl:128 [inlined]
 [4] macro expansion
   @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:34 [inlined]
 [5] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
 [6] macro expansion
   @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:34 [inlined]
 [7] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
 [8] (::var"#3#6")()
   @ Main ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:18
All matrix multiplication operations tests passed!
Testing in-place matrix multiplication operations on GpuMatrixModN...
Matrix A = 
2×3 GpuMatrixModN modulo 11:
[1 2 3; 4 5 6]

Matrix B = 
3×2 GpuMatrixModN modulo 11:
[7 8; 9 10; 0 1]

Initial Matrix C = 
2×2 GpuMatrixModN modulo 11:
[0 0; 0 0]

Testing mat_mul_gpu_type...
After mat_mul_gpu_type(A, B, C):
2×2 GpuMatrixModN modulo 11:
[3 9; 7 0]

In-place multiplication with modulus 7:
2×2 GpuMatrixModN modulo 7:
[4 3; 3 4]

Matrix Multiplication: Test Failed at /home/ryb/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/matmul_operations_test.jl:122
  Expression: Array(C2) ≈ expected_C2
   Evaluated: [4 3; 3 4] ≈ [2 1; 6 0]

Stacktrace:
 [1] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:679 [inlined]
 [2] test_inplace_matmul_operations()
   @ Main ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/matmul_operations_test.jl:122
 [3] test_matmul
   @ ~/GPUFiniteFieldMatrices.jl/test/GpuMatrixModN/matmul_operations_test.jl:129 [inlined]
 [4] macro expansion
   @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:34 [inlined]
 [5] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
 [6] macro expansion
   @ ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:34 [inlined]
 [7] macro expansion
   @ ~/.julia/juliaup/julia-1.11.4+0.x64.linux.gnu/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
 [8] (::var"#3#6")()
   @ Main ~/GPUFiniteFieldMatrices.jl/test/runtests.jl:18
All in-place matrix multiplication operations tests passed!

All matrix multiplication tests passed!
Test Summary:           | Pass  Fail  Error  Total   Time
GpuMatrixModN.jl        |   36     3      1     40  24.5s
  GPU Matrix Type       |   23     1            24  18.1s
  In-place Operations   |    8                   8   1.3s
  PLUQ Operations       |    2            1      3   5.0s
  Matrix Multiplication |    3     2             5   0.0s
